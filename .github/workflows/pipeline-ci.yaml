name: Python CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    strategy:
      max-parallel: 4
      matrix:
        python-version:
          - '3.x'

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'src/'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'

      - name: Install dependencies
        run: |
          python -m pip install pipx
          python -m pipx ensurepath
          python -m pipx install poetry
          poetry env use python
          poetry run pip install --upgrade pip setuptools
          poetry install --no-root

      - name: Run ruff
        run: poetry run ruff check .

      - name: Run mypy
        run: poetry run mypy .

  test:
    strategy:
      max-parallel: 4
      matrix:
        python-version:
          - '3.x'

    runs-on: ubuntu-latest
    env:
      ACTIONS_RUNNER_DEBUG: true
      ACTIONS_STEP_DEBUG: true

    defaults:
      run:
        working-directory: 'src/'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'

      - name: Install dependencies
        run: |
          python -m pip install pipx
          python -m pipx ensurepath
          python -m pipx install poetry
          poetry env use python
          poetry run pip install --upgrade pip setuptools
          poetry install --no-root

      - name: Run tests with coverage
        run: |
          poetry run pytest tests/unit
          poetry run coverage report
